{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "cosmosDbName": {
      "type": "String",
      "metadata": {
        "description": "Cosmos DB database account name"
      }
    },
    "cosmosDBType": {
      "type": "string",
      "metadata": {
        "description": "Choose the type of database account - GlobalDocumentDB, Graph, MongoDB"
      },
      "allowedValues": [
        "GlobalDocumentDB",
        "Graph",
        "MongoDB"
      ]
    },
    "defaultConsistencyLevel": {
      "type": "string",
      "allowedValues": [
        "Eventual",
        "Session",
        "BoundedStaleness",
        "Strong",
        "ConsistentPrefix"
      ],
      "metadata": {
        "description": "The default consistency level and configuration settings of the Cosmos DB account"
      }
    },
    "subnetResourceIdList": {
      "type": "array",
      "defaultValue": [
      ],
      "metadata": {
        "description": ""
      }
    },
    "ipRangeFilter": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Allowed list of client IPs for a given database account"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "virtualNetworkRulesCopy",
        "count": "[if(greater(length(parameters('subnetResourceIdList')), 0), length(parameters('subnetResourceIdList')), 1)]",
        "input": {
          "id": "[if(greater(length(parameters('subnetResourceIdList')), 0), parameters('subnetResourceIdList')[copyIndex('virtualNetworkRulesCopy')], json('null'))]"
        }
      }
    ],
    "virtualNetworkRulesEmpty": [
    ],
    "virtualNetworkRules": "[if(greater(length(parameters('subnetResourceIdList')), 0), variables('virtualNetworkRulesCopy'), variables('virtualNetworkRulesEmpty'))]",
    "cosmosAPIType": {
      "Graph": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]"
          }
        ],
        "isVirtualNetworkFilterEnabled": "[if(greater(length(variables('virtualNetworkRules')), 0), bool('true'), bool('false'))]",
        "virtualNetworkRules": "[variables('virtualNetworkRules')]",
        "ipRangeFilter": "[parameters('ipRangeFilter')]",
        "dependsOn": [
        ],
        "capabilities": [
          {
            "name": "EnableGremlin"
          }
        ],
        "enableFreeTier": true,
        "consistencyPolicy": {
          "defaultConsistencyLevel": "[parameters('defaultConsistencyLevel')]"
        }
      },
      "GlobalDocumentDB": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]"
          }
        ],
        "isVirtualNetworkFilterEnabled": "[if(greater(length(variables('virtualNetworkRules')), 0), bool('true'), bool('false'))]",
        "virtualNetworkRules": "[variables('virtualNetworkRules')]",
        "ipRangeFilter": "[parameters('ipRangeFilter')]",
        "dependsOn": [
        ],
        "capabilities": [
        ],
        "enableFreeTier": true,
        "consistencyPolicy": {
          "defaultConsistencyLevel": "[parameters('defaultConsistencyLevel')]"
        }
      },
      "MongoDB": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]"
          }
        ],
        "isVirtualNetworkFilterEnabled": "[if(greater(length(variables('virtualNetworkRules')), 0), bool('true'), bool('false'))]",
        "virtualNetworkRules": "[variables('virtualNetworkRules')]",
        "ipRangeFilter": "[parameters('ipRangeFilter')]",
        "dependsOn": [
        ],
        "capabilities": [
        ],
        "enableFreeTier": true,
        "consistencyPolicy": {
          "defaultConsistencyLevel": "[parameters('defaultConsistencyLevel')]"
        }
      }
    },
    "cosmosAccountKind": {
      "GlobalDocumentDB": {
        "kind": "GlobalDocumentDB"
      },
      "Graph": {
        "kind": "GlobalDocumentDB"
      },
      "MongoDB": {
        "kind": "MongoDB"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('cosmosDbName')]",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "apiVersion": "2019-12-12",
      "location": "[resourceGroup().location]",
      "kind": "[variables('cosmosAccountKind')[parameters('cosmosDBType')].kind]",
      "properties": "[variables('cosmosAPIType')[parameters('cosmosDBType')]]"
    }
  ],
  "outputs": {
    "PrimaryMasterKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2015-04-08').primaryMasterKey]"
    },
    "PrimaryReadonlyMasterKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2015-04-08').primaryReadonlyMasterKey]"
    }
  }
}
